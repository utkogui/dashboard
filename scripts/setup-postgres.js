/**
 * Script para configurar o banco de dados PostgreSQL (Supabase ou Neon)
 * 
 * Este script executa os passos necess√°rios para configurar o banco de dados PostgreSQL,
 * incluindo a gera√ß√£o do cliente Prisma e a cria√ß√£o das migra√ß√µes.
 * 
 * Instru√ß√µes:
 * 1. Certifique-se de que o arquivo .env est√° configurado com a URL de conex√£o do PostgreSQL
 * 2. Execute este script para configurar o banco de dados
 */

import { execSync } from 'child_process';
import fs from 'fs';
import path from 'path';
import dotenv from 'dotenv';

// Carregar vari√°veis de ambiente
dotenv.config();

// Verificar se a URL do banco de dados est√° configurada
if (!process.env.DATABASE_URL) {
  console.error('‚ùå A vari√°vel de ambiente DATABASE_URL n√£o est√° configurada!');
  console.error('Por favor, configure o arquivo .env com a URL de conex√£o do PostgreSQL.');
  process.exit(1);
}

/**
 * Fun√ß√£o para executar comandos do Prisma
 */
function runPrismaCommand(command) {
  try {
    console.log(`Executando: npx prisma ${command}`);
    execSync(`npx prisma ${command}`, { stdio: 'inherit' });
    return true;
  } catch (error) {
    console.error(`‚ùå Erro ao executar 'npx prisma ${command}':`, error.message);
    return false;
  }
}

/**
 * Fun√ß√£o principal para configurar o banco de dados
 */
async function setupDatabase() {
  try {
    console.log('üöÄ Iniciando configura√ß√£o do banco de dados PostgreSQL...');
    
    // Gerar cliente Prisma
    console.log('\nüì¶ Gerando cliente Prisma...');
    if (!runPrismaCommand('generate')) {
      throw new Error('Falha ao gerar o cliente Prisma.');
    }
    
    // Criar migra√ß√µes
    console.log('\nüîÑ Criando migra√ß√µes do banco de dados...');
    if (!runPrismaCommand('migrate dev --name initial')) {
      throw new Error('Falha ao criar as migra√ß√µes do banco de dados.');
    }
    
    console.log('\n‚úÖ Configura√ß√£o do banco de dados conclu√≠da com sucesso!');
    console.log('\nPr√≥ximos passos:');
    console.log('1. Execute o script de exporta√ß√£o: node scripts/migrate-to-postgres.js');
    console.log('2. Execute o script de importa√ß√£o: node scripts/import-to-postgres.js');
    
  } catch (error) {
    console.error('\n‚ùå Erro durante a configura√ß√£o do banco de dados:', error.message);
    process.exit(1);
  }
}

// Executar configura√ß√£o
setupDatabase().catch(console.error);
